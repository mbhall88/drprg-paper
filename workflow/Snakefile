from pathlib import Path
from itertools import product
import pandas as pd


# =====================================
# Workflow config items
configfile: "config/config.yaml"


WORKFLOW = Path("workflow").resolve()
RULES = WORKFLOW / "rules"
ENVS = WORKFLOW / "envs"
SCRIPTS = WORKFLOW / "scripts"
RESULTS = Path("results").resolve()
RESOURCES = Path("resources").resolve()
LOGS = Path("logs/rules").resolve()
CONTAINERS = config["containers"]
GB = 1_024
PADDING: int = config["padding"]
KS: list[int] = config["pandora"]["ks"]
WS: list[int] = config["pandora"]["ws"]
WKS = [(w, k) for w, k in product(WS, KS) if w < k]
QC_DIR = Path(config["QC_dir"])
MIN_ILLUMINA_COV = config["min_cov"]
MIN_NANOPORE_COV = config["min_cov"]
TECHS = ["nanopore", "illumina"]
# =====================================

inclusion_expr = f"illumina_covg >= {MIN_ILLUMINA_COV} and nanopore_covg >= {MIN_NANOPORE_COV} and lineage != 'mixed'"
h2h_df = pd.read_csv(config["h2h_samplesheet"]).query(inclusion_expr)
SAMPLES = set(h2h_df["sample"])

# =====================================
target_files = set()
# for w, k in WKS:
#     for s in h2h_df["sample"]:
#         for t in TECHS:
#             target_files.add(
#                 RESULTS / f"drprg/wk_sweep/predict/w{w}/k{k}/{t}/{s}/{s}.drprg.json"
#             )

target_files.add(RESULTS / "drprg/wk_sweep/predict/results.csv")


# =====================================
rule all:
    input:
        target_files,


rule index_reference:
    input:
        ref=RESOURCES / "NC_000962.3.fa",
    output:
        index=RESOURCES / "NC_000962.3.fa.fai",
    log:
        LOGS / "index_reference.log",
    container:
        CONTAINERS["samtools"]
    shell:
        "samtools faidx {input.ref} 2> {log}"


# =====================================
include: RULES / "common.smk"
include: RULES / "panel.smk"
include: RULES / "wk_sweep.smk"
